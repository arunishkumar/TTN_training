package collections;

import java.util.*;
import java.lang.*;
class SpecialStack
{
    Stack<Integer> s;
    SpecialStack()
    {
    	s=new Stack<Integer>();
    }
	private List<Integer> li=new ArrayList<>();
	private int idx=-1;
	public void push(int value)
	{
		if(s.isEmpty())
		{
			s.push(value);
			li.add(value);
			idx++;
		}
		else
		{
			int min_value=Math.min(value,li.get(idx));
			s.push(value);
			if(idx+1<li.size())
			{
				li.set(idx+1, min_value);
			}
			else
			{
				li.add(idx+1,min_value);
			}
			idx++;
		}
		return;
	}
	public void pop()
	{
		if(!s.isEmpty())
		{
			s.pop();
			idx--;
		}
		return;
	}
	public String isEmpty()
	{
		if(s.isEmpty())
		{
			return "List is Empty"; 
		}
		else
		{
			return "List is not Empty";
		}
	}
	public int getMin()
	{
		if(!s.isEmpty())
		{
		return li.get(idx);
		}
		else
		{
			System.out.println("Stack is Empty");
			return -1;
		}
		
	}
}
public class Main3 {
     public static void main(String[] args)
     {
    	 SpecialStack s=new SpecialStack();
    	 s.push(-25);
    	 s.push(10);
    	 s.push(-55);
    	 s.push(20);
    	 s.push(45);
    	 s.pop();
    	 System.out.println("Minimum element is : "+s.getMin());
     }
}
